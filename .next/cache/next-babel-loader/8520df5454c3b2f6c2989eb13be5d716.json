{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nfunction getWindowDimensions() {\n  var _window = window,\n      width = _window.innerWidth,\n      height = _window.innerHeight;\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction useWindowDimensions() {\n  _s();\n\n  var _useState = useState(getWindowDimensions()),\n      windowDimensions = _useState[0],\n      setWindowDimensions = _useState[1];\n\n  useEffect(function () {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return function () {\n      return window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  return windowDimensions;\n}\n\n_s(useWindowDimensions, \"XalQq70mIWrnM+6Jr3XornfayDc=\");\n\nexport default useWindowDimensions();","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/image-carousel-test/components/WindowSize.js"],"names":["useState","useEffect","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,mBAAT,GAA+B;AAAA,gBACsBC,MADtB;AAAA,MACTC,KADS,WACrBC,UADqB;AAAA,MACWC,MADX,WACFC,WADE;AAE7B,SAAO;AACLH,IAAAA,KAAK,EAALA,KADK;AAELE,IAAAA,MAAM,EAANA;AAFK,GAAP;AAID;;AAED,SAASE,mBAAT,GAA+B;AAAA;;AAAA,kBACmBR,QAAQ,CACtDE,mBAAmB,EADmC,CAD3B;AAAA,MACtBO,gBADsB;AAAA,MACJC,mBADI;;AAK7BT,EAAAA,SAAS,CAAC,YAAM;AACd,aAASU,YAAT,GAAwB;AACtBD,MAAAA,mBAAmB,CAACR,mBAAmB,EAApB,CAAnB;AACD;;AAEDC,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO;AAAA,aAAMR,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAN;AAAA,KAAP;AACD,GAPQ,EAON,EAPM,CAAT;AASA,SAAOF,gBAAP;AACD;;GAfQD,mB;;AAiBT,eAAeA,mBAAmB,EAAlC","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nexport default useWindowDimensions();\n"]},"metadata":{},"sourceType":"module"}